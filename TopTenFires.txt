// 12/27 14:47 Very Real Fire
bool ManuallyAdjustLowPressPoint = false;
bool UseLowPress = true;
bool EnableWindEffect = false;
vec3 OriLowPress[3][3] = {
        {vec3(0.5f, 3, -20.0f),vec3(0, 3, -20.0f),vec3(-0.5f, 3, -20.0f)},
        {vec3(0.25f, 6, -20.0f), vec3(0, 6, -20.0f), vec3(-0.25f, 6, -20.0f)},
        {vec3(0, 8, -20.0f),vec3(0, 8, -20.0f),vec3(0, 8, -20.0f)}
    };
vec3 LowPress[3][3] = {
    {vec3(0.5f, 3, -20.0f),vec3(0, 3, -20.0f),vec3(-0.5f, 3, -20.0f)},
    {vec3(0.25f, 6, -20.0f), vec3(0, 6, -20.0f), vec3(-0.25f, 6, -20.0f)},
    {vec3(0, 8, -20.0f),vec3(0, 8, -20.0f),vec3(0, 8, -20.0f)}
};
float heightOfLowPress[3] = {2,4,6};

float ParticlesPerSecond = 3000;
float InitialPositionRadius = 1.0f;
vec3 PoolOfInitialVelocity[] = {
	vec3(-1,3,0),
	vec3(1,3,0),
	vec3(0,3,0)
};
int lengthOfPool = sizeof(PoolOfInitialVelocity) / 12 ;
float randV_Xmax = 1.0,randV_Xmin = -1.0;
float randV_Ymax = 1.0,randV_Ymin = -1.0;
float randV_Zmax = 1.0,randV_Zmin = -1.0;
unsigned int InitialAlpha = 255;
Colour InitialColor(255,191,0, InitialAlpha);
float InitialSize = 0.075f;
float InitLife = 3.0f;
float forceOfPress = 6.0f;
 float BurstRate = 1.0f;

// 12/27 13:50 More Real
bool ManuallyAdjustLowPressPoint = false;
    bool UseLowPress = true;
    bool EnableWindEffect = false;
    vec3 OriLowPress[3][3] = {
        {vec3(0.5f, 3, -20.0f),vec3(0, 3, -20.0f),vec3(-0.5f, 3, -20.0f)},
        {vec3(0.25f, 6, -20.0f), vec3(0, 6, -20.0f), vec3(-0.25f, 6, -20.0f)},
        {vec3(0, 8, -20.0f),vec3(0, 8, -20.0f),vec3(0, 8, -20.0f)}
    };
	vec3 LowPress[3][3] = {
        {vec3(0.5f, 3, -20.0f),vec3(0, 3, -20.0f),vec3(-0.5f, 3, -20.0f)},
        {vec3(0.25f, 6, -20.0f), vec3(0, 6, -20.0f), vec3(-0.25f, 6, -20.0f)},
        {vec3(0, 8, -20.0f),vec3(0, 8, -20.0f),vec3(0, 8, -20.0f)}
	};
	float heightOfLowPress[3] = {2,4,8};

	float ParticlesPerSecond = 4500;
	float InitialPositionRadius = 1.0f;
	vec3 PoolOfInitialVelocity[] = {
		vec3(-1,5,0),
		vec3(1,5,0),
		vec3(0,5,0)
	};
	int lengthOfPool = sizeof(PoolOfInitialVelocity) / 12 ;
	float randV_Xmax = 2.0,randV_Xmin = -2.0;
	float randV_Ymax = 1.0,randV_Ymin = -1.0;
	float randV_Zmax = 2.0,randV_Zmin = -2.0;
    unsigned int InitialAlpha = 64;
	Colour InitialColor(255,191,0, InitialAlpha);
	float InitialSize = 0.5f;
	float InitLife = 3.0f;
	float forceOfPress = 10.0f;
    float BurstRate = 1.0f;

// 12/27 13:55 More Real with wind effect
	bool ManuallyAdjustLowPressPoint = false;
    bool UseLowPress = true;
    bool EnableWindEffect = true;
    vec3 OriLowPress[3][3] = {
        {vec3(0.5f, 3, -20.0f),vec3(0, 3, -20.0f),vec3(-0.5f, 3, -20.0f)},
        {vec3(0.25f, 6, -20.0f), vec3(0, 6, -20.0f), vec3(-0.25f, 6, -20.0f)},
        {vec3(0, 8, -20.0f),vec3(0, 8, -20.0f),vec3(0, 8, -20.0f)}
    };
    vec3 LowPress[3][3] = {
        {vec3(0.5f, 3, -20.0f),vec3(0, 3, -20.0f),vec3(-0.5f, 3, -20.0f)},
        {vec3(0.25f, 6, -20.0f), vec3(0, 6, -20.0f), vec3(-0.25f, 6, -20.0f)},
        {vec3(0, 8, -20.0f),vec3(0, 8, -20.0f),vec3(0, 8, -20.0f)}
    };
    float heightOfLowPress[3] = { 2,4,8 };

    float ParticlesPerSecond = 4500;
    float InitialPositionRadius = 1.0f;
    vec3 PoolOfInitialVelocity[] = {
        vec3(-1,5,0),
        vec3(1,5,0),
        vec3(0,5,0)
    };
    int lengthOfPool = sizeof(PoolOfInitialVelocity) / 12;
    float randV_Xmax = 2.0, randV_Xmin = -2.0;
    float randV_Ymax = 1.0, randV_Ymin = -1.0;
    float randV_Zmax = 2.0, randV_Zmin = -2.0;
    unsigned int InitialAlpha = 64;
    Colour InitialColor(255, 191, 0, InitialAlpha);
    float InitialSize = 0.5f;
    float InitLife = 3.0f;
    float forceOfPress = 20.0f;
    float BurstRate = 1.0f;